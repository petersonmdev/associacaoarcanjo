name: associacaoarcanjo.com.br deployment
on:
  push:
    branches: [main]
jobs:
  build:
    runs-on:  ubuntu-latest
    steps:
      - name: Build
        run: echo Building the app

  # deploy production
  deploy-production:
    runs-on:  ubuntu-latest
    environment:
      name: production
      url: ${{ vars.URL }}
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Copy .env
        run: cp .env.example .env
      - name: Install composer Dependencies
        run: composer update && composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install node dependencies
        run: npm install
      - name: Setup Project
        run: |
          npm run dev
      - name: Deploy PHP to Server
        if: ${{ success() }}
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          REMOTE_HOST: ${{ vars.REMOTE_HOST }}
          REMOTE_USER: ${{ vars.REMOTE_USER }}
          REMOTE_PORT: ${{ vars.REMOTE_PORT }}
          TARGET: ${{ vars.TARGET }}
          script_stop: true
          script: |
            cd domains
            cd laravel-space.com
            git pull
            php composer.phar install
            php artisan migrate --force
      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SERVER_SSH_KEY  }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa -p ${{ vars.REMOTE_PORT }} ${{ vars.REMOTE_HOST }} >> ~/.ssh/known_hosts
      - name: Copy Build Files to Target Server
        run: |
          rsync -r -e "ssh -p ${{ vars.REMOTE_PORT }}" ${{ github.workspace }}/public/build/ ${{ vars.REMOTE_USER }}@${{ vars.REMOTE_HOST }}:~/domains/associacaoarcanjo.com.br/public/build

  # deploy production
#  deploy-production:
#    runs-on:  ubuntu-latest
#    environment:
#      name: production
#      url: ${{ vars.URL }}
#    needs: deploy-homolog
#    steps:
#      - name: Repo Checkout
#        uses: actions/checkout@v1
#      - name: Hostinger Deployment
#        uses: easingthemes/ssh-deploy@main
#        with:
#          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
#          ARGS: "-rlgoDzvc --delete"
#          SOURCE: "public/"
#          REMOTE_HOST: ${{ vars.REMOTE_HOST }}
#          REMOTE_USER: ${{ vars.REMOTE_USER }}
#          REMOTE_PORT: ${{ vars.REMOTE_PORT }}
#          TARGET: ${{ vars.TARGET }}
